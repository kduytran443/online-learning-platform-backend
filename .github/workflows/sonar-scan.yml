name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      - name: Determine branch and service directory
        id: branch-info
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          echo "Branch name: $BRANCH_NAME"
          # Check if branch ends with "service"
          if [[ "$BRANCH_NAME" == *"service" ]]; then
            echo "SERVICE_DIR=$BRANCH_NAME" >> $GITHUB_ENV
          else
            echo "SERVICE_DIR=skip" >> $GITHUB_ENV
          fi
  
      - name: Check if service directory exists
        if: env.SERVICE_DIR != 'skip'
        run: |
          if [ -d "$SERVICE_DIR" ]; then
            echo "Service directory exists: $SERVICE_DIR"
          else
            echo "Service directory does not exist: $SERVICE_DIR"
            exit 1
          fi
  
      - name: Skip Sonar Scan
        if: env.SERVICE_DIR == 'skip'
        run: |
          echo "Skipping test run as SERVICE_DIR is set to skip"

      - name: Cache SonarCloud packages
        if: env.SERVICE_DIR != 'skip'
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        if: env.SERVICE_DIR != 'skip'
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        if: env.SERVICE_DIR != 'skip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets["SONAR_TOKEN_$SERVICE_DIR"] }}
        run: |
          project_key="${BRANCH_NAME}"
          
          cd $SERVICE_DIR
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=$project_key \
            -Dsonar.organization=kduytran443 \
            -Dsonar.host.url=https://sonarcloud.io
