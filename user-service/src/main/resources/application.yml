spring:
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: "user-consumers"
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    streams:
      application-id: user-stream-app
      bootstrap-servers: localhost:9092
      default-key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      default-value-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  application:
    name: 'user'
  datasource:
    url: jdbc:postgresql://localhost:5433/user_db
    driver-class-name: org.postgresql.Driver
    username: user
    password: password
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
  sql:
    init:
      schema-locations: classpath:/schema.sql
      mode: always
  config:
    import: "optional:configserver:http://localhost:8071/"

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "http://localhost:8070/eureka"

management:
  info:
    env:
      enabled: true

info:
  app:
    name: "User"
    description: "User Service"
    version: "1.0.0"

server:
  port: 8081
logging:
  level:
    com:
      kduytran:
        userservice: DEBUG